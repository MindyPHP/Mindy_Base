<?php

namespace Mindy\Base;

use Mindy\Helper\Json;
use Mindy\Utils\RenderTrait;
use Modules\Meta\Components\MetaTrait;


/**
 * All rights reserved.
 *
 * @author Falaleev Maxim
 * @email max@studio107.ru
 * @version 1.0
 * @company Studio107
 * @site http://studio107.ru
 * @date 02/04/14.04.2014 16:47
 */
class Controller extends BaseController
{
    use RenderTrait, ApplicationList, MetaTrait;

    public function render($view, array $data = [])
    {
        return $this->renderTemplate($view, $data);
    }

    public function json(array $data = [])
    {
        header('Content-Type: application/json');
        echo JSON::encode($data);
        die();
    }

    /**
     * Creates a widget and executes it.
     * @param string $className the widget class name or class in dot syntax (e.g. application.widgets.MyWidget)
     * @param array $properties list of initial property values for the widget (Property Name => Property Value)
     * @param boolean $captureOutput whether to capture the output of the widget. If true, the method will capture
     * and return the output generated by the widget. If false, the output will be directly sent for display
     * and the widget object will be returned. This parameter is available since version 1.1.2.
     * @return mixed the widget instance when $captureOutput is false, or the widget output when $captureOutput is true.
     */
    public function widget($className, $properties = array(), $captureOutput = false)
    {
        ob_start();
        ob_implicit_flush(false);
        $widget = $this->createWidget($className, $properties);
        $widget->run();
        return ob_get_clean();
    }
}
